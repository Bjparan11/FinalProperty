/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User;

import dbConnect.dbConnector;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.PreparedStatement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Windows 10
 */
public class U_Property extends javax.swing.JFrame {

    /**
     * Creates new form Property
     */
    public U_Property() {
        initComponents();
        ty.setSelectedItem(stat);
          updateMembershipImage();
    }

    public String destination = "";
    File selectedFile;
    public String oldpath;
    public String path;
    
    public void setPropertyTypeAndLoadImage(String type) {
    ty.setSelectedItem(type);
    updateMembershipImage();
}


public static int getHeightFromWidth(String imagePath, int desiredWidth) {
        try {
          
            File imageFile = new File(imagePath);
            BufferedImage image = ImageIO.read(imageFile);
            
        
            int originalWidth = image.getWidth();
            int originalHeight = image.getHeight();
            
          
            int newHeight = (int) ((double) desiredWidth / originalWidth * originalHeight);
            
            return newHeight;
        } catch (IOException ex) {
            System.out.println("No image found!");
        }
        
        return -1;
    }

public  ImageIcon ResizeImage(String ImagePath, byte[] pic, JLabel label) {
    ImageIcon MyImage = null;
        if(ImagePath !=null){
            MyImage = new ImageIcon(ImagePath);
        }else{
            MyImage = new ImageIcon(pic);
        }
        
    int newHeight = getHeightFromWidth(ImagePath, label.getWidth());

    Image img = MyImage.getImage();
    Image newImg = img.getScaledInstance(label.getWidth(), newHeight, Image.SCALE_SMOOTH);
    ImageIcon image = new ImageIcon(newImg);
    return image;
}

  void updateMembershipImage() {
    String selectedType = (String) ty.getSelectedItem();

    String imagePath = null;

    if (selectedType != null) {
        switch (selectedType.trim()) {
            case "PROPERTY":
                imagePath = "/imageshouse/1.jpg";
                break;
            case "PROPERTY2":
                imagePath = "/imageshouse/2.jpg";
                break;
            case "PROPERTY3":
                imagePath = "/imageshouse/3.jpg";
                break;
            case "PROPERTY4":
                imagePath = "/imageshouse/4.jpg";
                break;
            case "PROPERTY5":
                imagePath = "/imageshouse/5.jpg";
                break;
            case "PROPERTY6":
                imagePath = "/imageshouse/6.jpg";
                break;
            default:
                image.setIcon(null);
                return;
        }

        // Load image as resource from the package
        URL imageURL = getClass().getResource(imagePath);
        if (imageURL != null) {
            ImageIcon icon = new ImageIcon(imageURL);
            Image img = icon.getImage().getScaledInstance(image.getWidth(), image.getHeight(), Image.SCALE_SMOOTH);
            image.setIcon(new ImageIcon(img));
        } else {
            JOptionPane.showMessageDialog(this, "Image file not found: " + imagePath, "Error", JOptionPane.ERROR_MESSAGE);
            image.setIcon(null);
        }
    } else {
        image.setIcon(null);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ty = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pr = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        pid = new javax.swing.JTextField();
        stat = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        imagesss = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        st = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(153, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Property");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(197, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 50));

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("ID :");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 40, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Status :");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, 90, 30));

        ty.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        ty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Commercial", "Residential", "Industrial", "Land" }));
        jPanel3.add(ty, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 160, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Type :");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 50, 30));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Total Price :");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 110, 30));
        jPanel3.add(pr, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 160, 30));

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("BUY");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 100, -1));

        pid.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 14)); // NOI18N
        pid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pid.setBorder(null);
        pid.setEnabled(false);
        pid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pidActionPerformed(evt);
            }
        });
        jPanel3.add(pid, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, 160, 40));

        stat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Not Available" }));
        jPanel3.add(stat, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 160, 30));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-search-48.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 40, 40));

        imagesss.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        imagesss.add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 300, 250));

        jPanel3.add(imagesss, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 340, 300));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Structure :");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 80, 30));

        st.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Two-Story", "Single", "Two-Story" }));
        st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stActionPerformed(evt);
            }
        });
        jPanel3.add(st, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 160, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 760, 400));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pidActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
     this.dispose();
      PropertyTransaction PT = new PropertyTransaction();
      PT.setVisible(true);              // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 if (ty.getSelectedItem() == null || st.getSelectedItem() == null || pr.getText().isEmpty() || stat.getSelectedItem() == null) {
    JOptionPane.showMessageDialog(null, "All fields are required.");
} else {
    try {
        String pType = ty.getSelectedItem().toString();
        String pStructure = st.getSelectedItem().toString();
        int pPrice = Integer.parseInt(pr.getText());
        String pStatus = stat.getSelectedItem().toString();

        // ✅ Save selected image
        if (selectedFile != null) {
            File dir = new File("src/propertyimages");
            if (!dir.exists()) dir.mkdirs();

            String newFileName = System.currentTimeMillis() + "_" + selectedFile.getName();
            File destFile = new File(dir, newFileName);
            Files.copy(selectedFile.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
            destination = destFile.getPath();
        } else {
            JOptionPane.showMessageDialog(null, "No image selected.");
            return;
        }

        dbConnector dbc = new dbConnector();
        String insertQuery = "INSERT INTO properties (type, structure, price, status, image_path) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement pst = dbc.getConnection().prepareStatement(insertQuery);
        pst.setString(1, pType);
        pst.setString(2, pStructure);
        pst.setInt(3, pPrice);
        pst.setString(4, pStatus);
        pst.setString(5, destination); // ✅ Set image path

        int inserted = pst.executeUpdate();

        if (inserted > 0) {
            JOptionPane.showMessageDialog(null, "Property successfully added.");
            ty.setSelectedIndex(0);
            st.setSelectedIndex(0);
            pr.setText("");
            stat.setSelectedIndex(0);
            image.setIcon(null); // clear preview
        } else {
            JOptionPane.showMessageDialog(null, "Failed to add property.");
        }

        pst.close();
        dbc.closeConnection();

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    }
}

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(U_Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(U_Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(U_Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(U_Property.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new U_Property().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel image;
    private javax.swing.JPanel imagesss;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JTextField pid;
    private javax.swing.JTextField pr;
    private javax.swing.JComboBox<String> st;
    private javax.swing.JComboBox<String> stat;
    public javax.swing.JComboBox<String> ty;
    // End of variables declaration//GEN-END:variables
}
